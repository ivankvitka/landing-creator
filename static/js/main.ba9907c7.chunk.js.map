{"version":3,"sources":["fonts/TradeWinds.woff2","fonts/TradeWinds.eot","fonts/Roboto-Bold.eot","fonts/Roboto-Regular.eot","fonts/Roboto-Italic.eot","fonts/TradeWinds.woff","fonts/Roboto-Bold.ttf","fonts/Roboto-Bold.woff","fonts/Roboto-Bold.woff2","fonts/Roboto-Regular.ttf","fonts/Roboto-Regular.woff","fonts/Roboto-Regular.woff2","fonts/Roboto-Italic.ttf","fonts/Roboto-Italic.woff","fonts/Roboto-Italic.woff2","components/Container/Container.tsx","components/Header/Header.tsx","shared/utils/elements.utils.ts","store/layers/layers.reducer.ts","store/layers/layers.selectors.ts","store/layers/layers.actions.ts","store/layers/layers.types.ts","shared/hooks/useSelectLayer.hook.ts","components/Tab/Tab.tsx","components/Tab/index.ts","components/main-containers/LeftBar/LeftBar.tsx","components/main-containers/LeftBar/index.ts","components/main-containers/RightBar/components/Select/index.ts","components/main-containers/RightBar/components/Select/Select.tsx","components/main-containers/RightBar/RightBar.tsx","components/main-containers/RightBar/index.ts","shared/hooks/useSelectLayerOnMount.ts","shared/hooks/useSelectNewRef.hook.ts","components/constructor/Block/Block.tsx","components/constructor/Block/index.ts","components/constructor/MainBlock/MainBlock.tsx","components/constructor/MainBlock/index.ts","components/constructor/CreateElementModal/CreateElementModal.tsx","components/constructor/CreateElementModal/index.ts","components/constructor/Controls/Controls.tsx","components/constructor/Controls/Controls.helpers.ts","components/constructor/Controls/index.ts","components/main-containers/Desktop/Desktop.tsx","components/main-containers/Desktop/index.ts","components/main-containers/SettingsBar/SettingsBar.tsx","components/main-containers/SettingsBar/index.ts","components/Layout/Layout.tsx","components/AppContainer/index.ts","components/AppContainer/AppContainer.tsx","fonts/index.js","styles/GlobalStyles.tsx","styles/index.ts","store/root.reducer.ts","App.tsx","index.tsx"],"names":["module","exports","Container","children","ContainerWrapper","styled","div","Header","Wrapper","LogoTitle","header","span","generateChildrenId","parentId","childElementsLength","initialState","selectedLayerId","selectedElementStyles","selectedLayerRef","layersCollection","layer_0","type","styles","elements","selectSelectedLayerId","layers","selectLayerById","id","selectLayersCollection","selectSelectedLayerStyles","selectSelectedElementRef","selectLayerAction","payload","useSelectLayer","dispatch","useDispatch","e","stopPropagation","Tab","element","useState","isExpanded","setIsExpanded","useSelector","handleSelectLayer","childrenElements","className","onClick","length","prevState","Title","Settings","Arrow","SelectedMark","isSelected","List","map","elementId","childrenElement","key","ul","LeftBar","rootLayer","Select","propertyName","values","selectedValue","onSelectChange","value","name","onChange","item","index","RightBar","handleChange","Object","entries","target","Row","PropertyTitle","display","top","useSelectLayerOnMount","useEffect","useSelectNewRef","elementRef","selectedLayerStyles","Block","elementData","currentLayer","useRef","selected","style","ref","MainBlock","CreateElementModal","onToggleModal","elementType","setElementType","Background","Content","onSubmit","preventDefault","form","modalRoot","document","getElementById","Controls","isModalVisible","setIsModalVisible","selectedElementRef","controlsRect","useMemo","current","currentElement","currentElementRect","getBoundingClientRect","offsetTop","height","left","offsetLeft","width","getControlsRect","handleToggleModal","AddElementButton","createPortal","DesktopContext","createContext","desktopRef","Desktop","Provider","SettingsBar","Layout","AppContainer","createGlobalStyle","TradeWindsRegularEot","TradeWindsRegularWoff2","TradeWindsRegularWoff","TradeWindsRegularTtf","RobotoBoldEot","RobotoBoldWoff2","RobotoBoldWoff","RobotoBoldTtf","RobotoRegularEot","RobotoRegularWoff2","RobotoRegularWoff","RobotoRegularTtf","RobotoItalicEot","RobotoItalicWoff2","RobotoItalicWoff","RobotoItalicTtf","CommonStyles","GlobalStyles","rootReducer","combineReducers","state","action","layerElementsArr","newLayerId","newLayer","selectedLayer","composeEnhancers","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","sagaMiddleware","createSagaMiddleware","store","createStore","applyMiddleware","App","ReactDOM","render"],"mappings":"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","file":"static/js/main.ba9907c7.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/TradeWinds.81950ec6.woff2\";","module.exports = __webpack_public_path__ + \"static/media/TradeWinds.b2357d30.eot\";","module.exports = __webpack_public_path__ + \"static/media/Roboto-Bold.4a1d8c27.eot\";","module.exports = __webpack_public_path__ + \"static/media/Roboto-Regular.b9077621.eot\";","module.exports = __webpack_public_path__ + \"static/media/Roboto-Italic.d798f933.eot\";","module.exports = __webpack_public_path__ + \"static/media/TradeWinds.ade553e4.woff\";","module.exports = __webpack_public_path__ + \"static/media/Roboto-Bold.16d7bb99.ttf\";","module.exports = __webpack_public_path__ + \"static/media/Roboto-Bold.08cb8f79.woff\";","module.exports = __webpack_public_path__ + \"static/media/Roboto-Bold.f3a02e25.woff2\";","module.exports = __webpack_public_path__ + \"static/media/Roboto-Regular.4312f1fb.ttf\";","module.exports = __webpack_public_path__ + \"static/media/Roboto-Regular.94dac78e.woff\";","module.exports = __webpack_public_path__ + \"static/media/Roboto-Regular.9feb0110.woff2\";","module.exports = __webpack_public_path__ + \"static/media/Roboto-Italic.b391d0e9.ttf\";","module.exports = __webpack_public_path__ + \"static/media/Roboto-Italic.fd597012.woff\";","module.exports = __webpack_public_path__ + \"static/media/Roboto-Italic.ad4e0874.woff2\";","import React, { FC } from 'react';\r\nimport styled from 'styled-components';\r\n\r\ninterface Props {\r\n  children: JSX.Element;\r\n}\r\n\r\nconst Container: FC<Props> = ({ children }) => {\r\n  return <ContainerWrapper>{children}</ContainerWrapper>;\r\n};\r\n\r\nexport default Container;\r\n\r\nconst ContainerWrapper = styled.div`\r\n  margin: 0 auto;\r\n  max-width: 1600px;\r\n  width: 100%;\r\n`;\r\n","import React, { FC } from 'react';\r\nimport styled from 'styled-components';\r\nimport Container from '../Container/Container';\r\n\r\nconst Header: FC = () => {\r\n  return (\r\n    <Wrapper>\r\n      <Container>\r\n        <LogoTitle>Landing Constructor</LogoTitle>\r\n      </Container>\r\n    </Wrapper>\r\n  );\r\n};\r\n\r\nexport default Header;\r\n\r\nconst Wrapper = styled.header`\r\n  padding: 20px 30px;\r\n  color: #ffffff;\r\n  background: linear-gradient(135deg, #dd1173, #350e47);\r\n`;\r\n\r\nconst LogoTitle = styled.span`\r\n  font-size: 30px;\r\n`;\r\n","export const getParentId = (childrenId: string) => {\r\n  const layersIdsArr = childrenId.split('_');\r\n  layersIdsArr.pop();\r\n  return layersIdsArr;\r\n};\r\n\r\nexport const generateChildrenId = (parentId: string, childElementsLength: number) =>\r\n  `${parentId}_${childElementsLength}`;\r\n","import { Reducer } from 'redux';\r\nimport { CHANGE_SELECTED_LAYER_REF, CHANGE_STYLES, CREATE_NEW_LAYER, LayersState, SELECT_LAYER } from './layers.types';\r\nimport { generateChildrenId } from '../../shared/utils';\r\n\r\nconst initialState: Readonly<LayersState> = {\r\n  selectedLayerId: '',\r\n  selectedElementStyles: {},\r\n  selectedLayerRef: null,\r\n  layersCollection: {\r\n    layer_0: {\r\n      type: 'Block',\r\n      styles: {},\r\n      elements: [],\r\n    },\r\n  },\r\n};\r\n\r\nexport const layersReducer: Reducer<LayersState, any> = (state = initialState, action) => {\r\n  switch (action.type) {\r\n    case SELECT_LAYER: {\r\n      const { layersCollection } = state;\r\n      const { styles } = layersCollection[action.payload];\r\n\r\n      return { ...state, selectedLayerId: action.payload, selectedElementStyles: { ...styles } };\r\n    }\r\n\r\n    case CHANGE_STYLES: {\r\n      const { layersCollection, selectedLayerId, selectedElementStyles } = state;\r\n\r\n      return {\r\n        ...state,\r\n        selectedElementStyles: { ...selectedElementStyles, ...action.payload },\r\n        layersCollection: {\r\n          ...layersCollection,\r\n          [selectedLayerId]: {\r\n            ...layersCollection[selectedLayerId],\r\n            styles: { ...layersCollection.styles, ...action.payload },\r\n          },\r\n        },\r\n      };\r\n    }\r\n\r\n    case CHANGE_SELECTED_LAYER_REF:\r\n      return { ...state, selectedLayerRef: { ...action.payload } };\r\n\r\n    case CREATE_NEW_LAYER: {\r\n      const { layersCollection, selectedLayerId } = state;\r\n\r\n      const layerElementsArr = layersCollection[selectedLayerId].elements || [];\r\n\r\n      const newLayerId = generateChildrenId(selectedLayerId, layerElementsArr.length);\r\n\r\n      const newLayer = {\r\n        [newLayerId]: action.payload,\r\n      };\r\n\r\n      let selectedLayer = layersCollection[selectedLayerId];\r\n      selectedLayer = {\r\n        ...selectedLayer,\r\n        elements: [...selectedLayer.elements, newLayerId],\r\n      };\r\n\r\n      return {\r\n        ...state,\r\n        layersCollection: {\r\n          ...layersCollection,\r\n          ...newLayer,\r\n          [selectedLayerId]: selectedLayer,\r\n        },\r\n      };\r\n    }\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n","import { RootState } from '../root.reducer';\r\n\r\nexport const selectSelectedLayerId = ({ layers }: RootState) => layers.selectedLayerId;\r\n\r\nexport const selectLayerById = (id: string) => ({ layers }: RootState) => layers.layersCollection[id];\r\n\r\nexport const selectLayersCollection = ({ layers }: RootState) => layers.layersCollection;\r\n\r\nexport const selectSelectedLayerStyles = ({ layers }: RootState) => layers.selectedElementStyles;\r\n\r\nexport const selectSelectedElementRef = ({ layers }: RootState) => layers.selectedLayerRef;","import { CREATE_NEW_LAYER, NewStyle, SELECT_LAYER, CHANGE_STYLES, CHANGE_SELECTED_LAYER_REF } from './layers.types';\r\nimport { RefObject } from 'react';\r\n\r\nexport const selectLayerAction = (id: string) => ({\r\n  type: SELECT_LAYER,\r\n  payload: id,\r\n});\r\n\r\nexport const createNewLayerAction = (payload: Elements.AnyElement) => ({\r\n  type: CREATE_NEW_LAYER,\r\n  payload,\r\n});\r\n\r\nexport const changeStylesAction = (payload: NewStyle) => ({\r\n  type: CHANGE_STYLES,\r\n  payload,\r\n});\r\n\r\nexport const changeSelectedLayerRefAction = (payload: RefObject<HTMLElement> | null) => ({\r\n  type: CHANGE_SELECTED_LAYER_REF,\r\n  payload,\r\n});\r\n","export interface LayersCollection {\r\n  [key: string]: Elements.Block;\r\n}\r\n\r\nexport interface NewStyle {\r\n  [key: string]: string;\r\n}\r\n\r\nexport interface LayersState {\r\n  selectedLayerId: string;\r\n  layersCollection: LayersCollection;\r\n  selectedElementStyles: React.CSSProperties;\r\n  selectedLayerRef: React.RefObject<HTMLElement> | null;\r\n}\r\n\r\nexport const SELECT_LAYER = 'SELECT_LAYER';\r\nexport const CREATE_NEW_LAYER = 'CREATE_NEW_LAYER';\r\nexport const CHANGE_STYLES = 'CHANGE_STYLES';\r\nexport const CHANGE_SELECTED_LAYER_REF = 'CHANGE_SELECTED_LAYER_REF';\r\n","import { useDispatch } from 'react-redux';\r\nimport { MouseEvent } from 'react';\r\nimport { selectLayerAction } from '../../store/layers';\r\n\r\nexport const useSelectLayer = (id: string) => {\r\n  const dispatch = useDispatch();\r\n\r\n  return (e: MouseEvent<HTMLElement>) => {\r\n    e.stopPropagation();\r\n    dispatch(selectLayerAction(id));\r\n  };\r\n};\r\n","import React, { FC, useState } from 'react';\r\nimport styled from 'styled-components';\r\nimport { useSelector } from 'react-redux';\r\nimport { LayersCollection, selectLayersCollection, selectSelectedLayerId } from '../../store/layers';\r\nimport { useSelectLayer } from '../../shared/hooks/useSelectLayer.hook';\r\n\r\ninterface Props {\r\n  id: string;\r\n  element: Elements.AnyElement;\r\n}\r\n\r\nconst Tab: FC<Props> = ({ id, element }) => {\r\n  const [isExpanded, setIsExpanded] = useState(false);\r\n  const layersCollection: LayersCollection = useSelector(selectLayersCollection);\r\n  const selectedLayerId = useSelector(selectSelectedLayerId);\r\n  const handleSelectLayer = useSelectLayer(id);\r\n\r\n  const { type, elements: childrenElements } = element;\r\n\r\n  const handleToggleTab = () => childrenElements && childrenElements.length && setIsExpanded(prevState => !prevState);\r\n\r\n  return (\r\n    <Wrapper>\r\n      <Header className={isExpanded ? 'expanded' : ''} onClick={handleToggleTab}>\r\n        <Title>{type}</Title>\r\n\r\n        <Settings>\r\n          {childrenElements && childrenElements.length > 0 && <Arrow />}\r\n\r\n          <SelectedMark onClick={handleSelectLayer} isSelected={selectedLayerId === id} />\r\n        </Settings>\r\n      </Header>\r\n\r\n      {childrenElements && childrenElements.length > 0 && isExpanded && (\r\n        <List>\r\n          {childrenElements.map(elementId => {\r\n            const childrenElement = layersCollection[elementId];\r\n\r\n            return <Tab key={elementId} id={elementId} element={childrenElement} />;\r\n          })}\r\n        </List>\r\n      )}\r\n    </Wrapper>\r\n  );\r\n};\r\n\r\nexport default Tab;\r\n\r\nconst Wrapper = styled.div`\r\n  padding: 20px 0;\r\n  width: 100%;\r\n`;\r\n\r\nconst Title = styled.div`\r\n  font-size: 16px;\r\n  color: #ffffff;\r\n  transition: 0.5s;\r\n  text-transform: capitalize;\r\n`;\r\n\r\nconst Settings = styled.div`\r\n  display: flex;\r\n  align-items: center;\r\n`;\r\n\r\ninterface SelectedMarkProps {\r\n  isSelected: boolean;\r\n}\r\n\r\nconst SelectedMark = styled.div`\r\n  width: 15px;\r\n  height: 15px;\r\n  border: 1px solid ${({ isSelected }: SelectedMarkProps) => (isSelected ? '#dd1173' : '#ffffff')};\r\n`;\r\n\r\nconst Arrow = styled.div`\r\n  margin-right: 20px;\r\n  display: flex;\r\n  width: 20px;\r\n  height: 20px;\r\n\r\n  &::before {\r\n    display: block;\r\n    margin: auto;\r\n    width: 10px;\r\n    height: 10px;\r\n    content: '';\r\n    border: 5px solid #ffffff;\r\n    border-left-color: transparent;\r\n    border-top-color: transparent;\r\n    transform-origin: 75% 75%;\r\n    transform: translateY(-50%) rotate(45deg);\r\n    transition: 0.5s;\r\n  }\r\n`;\r\n\r\nconst Header = styled.div`\r\n  padding: 0 20px 10px 20px;\r\n  border-bottom: 1px solid #5b187a;\r\n  display: flex;\r\n  justify-content: space-between;\r\n  align-items: center;\r\n\r\n  &:hover,\r\n  &.expanded {\r\n    cursor: pointer;\r\n\r\n    ${Arrow}::before {\r\n      border-right-color: #dd1173;\r\n      border-bottom-color: #dd1173;\r\n    }\r\n  }\r\n\r\n  &.expanded {\r\n    ${Arrow}::before {\r\n      transform: translateY(-50%) rotate(-135deg);\r\n    }\r\n  }\r\n`;\r\n\r\nconst List = styled.ul`\r\n  padding: 10px 0 10px 30px;\r\n`;\r\n","import Tab from './Tab';\r\n\r\nexport default Tab;\r\n","import React, { FC } from 'react';\r\nimport { useSelector } from 'react-redux';\r\nimport styled from 'styled-components';\r\nimport Tab from '../../Tab';\r\nimport { selectLayerById } from '../../../store/layers';\r\n\r\nconst LeftBar: FC = () => {\r\n  const rootLayer = useSelector(selectLayerById('layer_0'));\r\n  return (\r\n    <Wrapper>\r\n      <Tab id=\"layer_0\" element={rootLayer} />\r\n    </Wrapper>\r\n  );\r\n};\r\n\r\nexport default LeftBar;\r\n\r\nconst Wrapper = styled.div`\r\n  flex-grow: 1;\r\n  max-width: 350px;\r\n  background-color: #1b1b1b;\r\n  overflow: auto;\r\n`;\r\n","import LeftBar from './LeftBar';\r\n\r\nexport default LeftBar;\r\n","import Select from './Select';\r\n\r\nexport default Select;","import React, { ChangeEvent, FC } from 'react';\r\n\r\ninterface SelectProps {\r\n  propertyName: string;\r\n  values: string[];\r\n  selectedValue: string | undefined;\r\n  onSelectChange: (e: ChangeEvent<HTMLSelectElement>, propertyName: string) => void;\r\n}\r\n\r\nconst Select: FC<SelectProps> = ({ propertyName, values, selectedValue, onSelectChange }) => {\r\n  return (\r\n    <select value={selectedValue} name={propertyName} onChange={e => onSelectChange(e, propertyName || '')}>\r\n      {values.map((item, index) => (\r\n        <option key={index} value={item}>\r\n          {item}\r\n        </option>\r\n      ))}\r\n    </select>\r\n  );\r\n};\r\n\r\nexport default Select;\r\n","import React, { ChangeEvent, FC } from 'react';\r\nimport styled from 'styled-components';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { changeStylesAction, selectSelectedLayerStyles } from '../../../store/layers';\r\nimport Select from './components/Select';\r\n\r\nconst RightBar: FC = () => {\r\n  const selectedElementStyles = useSelector(selectSelectedLayerStyles);\r\n  const dispatch = useDispatch();\r\n\r\n  const selectedElementStylesEntries = Object.entries(selectedElementStyles);\r\n\r\n  const handleChange = (e: ChangeEvent<HTMLSelectElement | HTMLInputElement>, propertyName: string): void => {\r\n    dispatch(changeStylesAction({ [propertyName]: e.target.value }));\r\n  };\r\n\r\n  return (\r\n    <Wrapper>\r\n      <Row>\r\n        <PropertyTitle>Display</PropertyTitle>\r\n        <Select\r\n          propertyName=\"display\"\r\n          values={['block', 'inline', 'flex', 'none']}\r\n          selectedValue={selectedElementStyles.display}\r\n          onSelectChange={handleChange}\r\n        />\r\n      </Row>\r\n      <Row>\r\n        <PropertyTitle>Position</PropertyTitle>\r\n        <Select\r\n          propertyName=\"position\"\r\n          values={['static', 'absolute', 'relative', 'none']}\r\n          selectedValue={selectedElementStyles.display}\r\n          onSelectChange={handleChange}\r\n        />\r\n      </Row>\r\n      <input\r\n        type=\"text\"\r\n        value={selectedElementStyles.top}\r\n        name=\"top\"\r\n        onChange={e => handleChange(e, 'top')}\r\n      />\r\n    </Wrapper>\r\n  );\r\n};\r\n\r\nexport default RightBar;\r\n\r\nconst Wrapper = styled.div`\r\n  padding: 10px;\r\n  background: #1b1b1b;\r\n  flex-grow: 1;\r\n  max-width: 350px;\r\n`;\r\n\r\nconst PropertyTitle = styled.span`\r\n  margin-right: 20px;\r\n  font-size: 14px;\r\n  text-transform: capitalize;\r\n`;\r\n\r\nconst Row = styled.div`\r\n  display: flex;\r\n  margin-bottom: 20px;\r\n`;\r\n","import RightBar from './RightBar';\r\n\r\nexport default RightBar;\r\n","import { useEffect } from 'react';\r\nimport { selectLayerAction } from '../../store/layers';\r\nimport { useDispatch } from 'react-redux';\r\n\r\nexport const useSelectLayerOnMount = (id: string) => {\r\n  const dispatch = useDispatch();\r\n  useEffect(() => {\r\n    dispatch(selectLayerAction(id));\r\n  }, [])\r\n};\r\n","import { CSSProperties, RefObject, useEffect } from 'react';\r\nimport { changeSelectedLayerRefAction } from '../../store/layers';\r\nimport { useDispatch } from 'react-redux';\r\n\r\nexport const useSelectNewRef = (\r\n  elementRef: RefObject<HTMLElement> | null,\r\n  selectedLayerId: string,\r\n  selectedLayerStyles: CSSProperties,\r\n  isSelected: boolean,\r\n) => {\r\n  const dispatch = useDispatch();\r\n\r\n  useEffect(() => {\r\n    if (isSelected) {\r\n      dispatch(changeSelectedLayerRefAction(elementRef));\r\n    }\r\n  }, [selectedLayerId, selectedLayerStyles]);\r\n};\r\n","import React, { FC, useRef } from 'react';\r\nimport styled from 'styled-components';\r\nimport { useSelector } from 'react-redux';\r\nimport {\r\n  selectLayerById,\r\n  selectLayersCollection,\r\n  selectSelectedLayerStyles,\r\n  selectSelectedLayerId,\r\n} from '../../../store/layers';\r\nimport { useSelectLayer } from '../../../shared/hooks/useSelectLayer.hook';\r\nimport { useSelectLayerOnMount } from '../../../shared/hooks/useSelectLayerOnMount';\r\nimport { useSelectNewRef } from '../../../shared/hooks/useSelectNewRef.hook';\r\n\r\ninterface Props {\r\n  id: string;\r\n  elementData: Elements.Block;\r\n}\r\n\r\nconst Block: FC<Props> = ({ id, elementData }) => {\r\n  const layersCollection = useSelector(selectLayersCollection);\r\n  const selectedLayerId = useSelector(selectSelectedLayerId);\r\n  const selectedLayerStyles = useSelector(selectSelectedLayerStyles);\r\n  const handleSelectLayer = useSelectLayer(id);\r\n  const currentLayer = useSelector(selectLayerById(id));\r\n  const elementRef = useRef(null);\r\n\r\n  const isSelected = id === selectedLayerId;\r\n\r\n  useSelectLayerOnMount(id);\r\n  useSelectNewRef(elementRef, selectedLayerId, selectedLayerStyles, isSelected);\r\n\r\n  const { styles } = elementData;\r\n\r\n  return (\r\n    <Wrapper selected={id === selectedLayerId} onClick={handleSelectLayer} id={id} style={styles} ref={elementRef}>\r\n      {currentLayer.elements.map((id: string) => (\r\n        <Block key={id} id={id} elementData={layersCollection[id]} />\r\n      ))}\r\n    </Wrapper>\r\n  );\r\n};\r\n\r\nexport default Block;\r\n\r\ninterface WrapperProps {\r\n  selected: boolean;\r\n}\r\n\r\nconst Wrapper = styled.div`\r\n  padding: 10px;\r\n  cursor: pointer;\r\n  height: 100%;\r\n  outline: 1px solid ${({ selected }: WrapperProps) => (selected ? '#350e47' : '#eeeeee')};\r\n\r\n  &:hover {\r\n    outline-color: #dd1173;\r\n  }\r\n`;\r\n","import Block from './Block';\r\n\r\nexport default Block;\r\n","import React, { useRef } from 'react';\r\nimport styled from 'styled-components';\r\nimport { useSelector } from 'react-redux';\r\nimport { selectLayerById, selectLayersCollection, selectSelectedLayerId } from '../../../store/layers';\r\nimport Block from '../Block';\r\nimport { useSelectLayer } from '../../../shared/hooks/useSelectLayer.hook';\r\nimport { useSelectLayerOnMount } from '../../../shared/hooks/useSelectLayerOnMount';\r\nimport { useSelectNewRef } from '../../../shared/hooks/useSelectNewRef.hook';\r\n\r\nconst MainBlock = () => {\r\n  const selectedLayerId = useSelector(selectSelectedLayerId);\r\n  const layersCollection = useSelector(selectLayersCollection);\r\n  const rootLayerId = 'layer_0';\r\n  const currentLayer = useSelector(selectLayerById(rootLayerId));\r\n  const handleSelectLayer = useSelectLayer(rootLayerId);\r\n  const isSelected = selectedLayerId === rootLayerId;\r\n  const elementRef = useRef(null);\r\n  useSelectLayerOnMount(rootLayerId);\r\n  useSelectNewRef(elementRef, selectedLayerId, {}, isSelected);\r\n  return (\r\n    <Wrapper isSelected={isSelected} onClick={handleSelectLayer} id={rootLayerId} ref={elementRef}>\r\n      {currentLayer.elements.map((id: string) => (\r\n        <Block key={id} id={id} elementData={layersCollection[id]} />\r\n      ))}\r\n    </Wrapper>\r\n  );\r\n};\r\n\r\nexport default MainBlock;\r\n\r\ninterface WrapperProps {\r\n  isSelected: boolean;\r\n}\r\n\r\nconst Wrapper = styled.div`\r\n  padding: 10px;\r\n  cursor: pointer;\r\n  min-height: 100px;\r\n  outline: 1px solid ${({ isSelected }: WrapperProps) => (isSelected ? '#350e47' : '#eeeeee')};\r\n\r\n  &:hover {\r\n    outline-color: #dd1173;\r\n  }\r\n`;\r\n","import MainBlock from './MainBlock';\r\n\r\nexport default MainBlock;\r\n","import React, { ChangeEvent, FC, FormEvent, useState } from 'react';\r\nimport styled from 'styled-components';\r\nimport { useDispatch } from 'react-redux';\r\nimport { createNewLayerAction } from '../../../store/layers';\r\n\r\ninterface Props {\r\n  onToggleModal: () => void;\r\n}\r\n\r\nconst CreateElementModal: FC<Props> = ({ onToggleModal }) => {\r\n  const [elementType, setElementType] = useState<Elements.ElementTypes>('Block');\r\n  const dispatch = useDispatch();\r\n\r\n  const handleSubmit = (e: FormEvent<HTMLFormElement>) => {\r\n    e.preventDefault();\r\n    dispatch(\r\n      createNewLayerAction({\r\n        type: elementType,\r\n        elements: [],\r\n        styles: {\r\n          display: 'block',\r\n        },\r\n      }),\r\n    );\r\n\r\n    onToggleModal();\r\n  };\r\n\r\n  const handleChange = (e: ChangeEvent<HTMLSelectElement>) => {\r\n    setElementType(e.target.value as Elements.ElementTypes);\r\n  };\r\n\r\n  return (\r\n    <Wrapper>\r\n      <Background onClick={onToggleModal} />\r\n      <Content onSubmit={handleSubmit}>\r\n        <select name=\"elementType\" value={elementType} onChange={handleChange}>\r\n          <option value=\"Block\">Block</option>\r\n          <option value=\"Image\">Image</option>\r\n          <option value=\"Video\">Video</option>\r\n        </select>\r\n\r\n        <button>Create Element</button>\r\n      </Content>\r\n    </Wrapper>\r\n  );\r\n};\r\n\r\nexport default CreateElementModal;\r\n\r\nconst Wrapper = styled.div`\r\n  position: fixed;\r\n  top: 0;\r\n  left: 0;\r\n  z-index: 100;\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: center;\r\n  width: 100%;\r\n  height: 100%;\r\n`;\r\n\r\nconst Background = styled.div`\r\n  position: absolute;\r\n  top: 0;\r\n  left: 0;\r\n  width: 100%;\r\n  height: 100%;\r\n  background-color: rgba(0, 0, 0, 0.6);\r\n`;\r\n\r\nconst Content = styled.form`\r\n  position: relative;\r\n  width: 100%;\r\n  max-width: 800px;\r\n  background: #ffffff;\r\n`;\r\n","import CreateElementModal from './CreateElementModal';\r\n\r\nexport default CreateElementModal;\r\n","import React, { useMemo, useState } from 'react';\r\nimport styled from 'styled-components';\r\nimport { createPortal } from 'react-dom';\r\nimport CreateElementModal from '../CreateElementModal';\r\nimport { useSelector } from 'react-redux';\r\nimport { selectSelectedElementRef, selectSelectedLayerStyles, selectSelectedLayerId } from '../../../store/layers';\r\nimport { getControlsRect } from './Controls.helpers';\r\n\r\nconst modalRoot = document.getElementById('modal-root');\r\n\r\nconst Controls = () => {\r\n  const [isModalVisible, setIsModalVisible] = useState(false);\r\n  const selectedLayerId = useSelector(selectSelectedLayerId);\r\n  const selectedElementStyles = useSelector(selectSelectedLayerStyles);\r\n  const selectedElementRef = useSelector(selectSelectedElementRef);\r\n  const controlsRect = useMemo(() => getControlsRect(selectedElementRef), [\r\n    selectedLayerId,\r\n    selectedElementStyles,\r\n    selectedElementRef,\r\n  ]);\r\n\r\n  const handleToggleModal = () => setIsModalVisible(prevState => !prevState);\r\n\r\n  return (\r\n    <Wrapper\r\n      style={\r\n        controlsRect\r\n          ? {\r\n              top: `${controlsRect.top}px`,\r\n              left: `${controlsRect.left}px`,\r\n            }\r\n          : {}\r\n      }\r\n    >\r\n      <AddElementButton onClick={handleToggleModal}>+</AddElementButton>\r\n\r\n      {modalRoot && isModalVisible && createPortal(<CreateElementModal onToggleModal={handleToggleModal} />, modalRoot)}\r\n    </Wrapper>\r\n  );\r\n};\r\n\r\nexport default Controls;\r\n\r\nconst Wrapper = styled.div`\r\n  position: absolute;\r\n`;\r\n\r\nconst AddElementButton = styled.div`\r\n  user-select: none;\r\n  position: absolute;\r\n  top: 50%;\r\n  left: 50%;\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n  width: 20px;\r\n  height: 20px;\r\n  font-weight: bold;\r\n  color: #dd1173;\r\n  border: 2px solid #dd1173;\r\n  border-radius: 50%;\r\n  transform: translate(-50%, -50%);\r\n\r\n  &:hover {\r\n    border-color: #350e47;\r\n    color: #350e47;\r\n  }\r\n`;\r\n","import { RefObject } from 'react';\r\n\r\nexport const getControlsRect = (selectedLayerRef: RefObject<HTMLElement> | null) => {\r\n  if (selectedLayerRef && selectedLayerRef.current) {\r\n    const { current: currentElement } = selectedLayerRef;\r\n    const currentElementRect = currentElement.getBoundingClientRect();\r\n\r\n    return {\r\n      top: currentElement.offsetTop + currentElementRect.height / 2,\r\n      left: currentElement.offsetLeft + currentElementRect.width / 2,\r\n    };\r\n  }\r\n  return null;\r\n};\r\n","import Controls from './Controls';\r\n\r\nexport default Controls;\r\n","import React, { createContext, RefObject, useRef } from 'react';\r\nimport styled from 'styled-components';\r\nimport MainBlock from '../../constructor/MainBlock';\r\nimport Controls from '../../constructor/Controls';\r\n\r\ninterface DesktopContextValue {\r\n  desktopRef: RefObject<HTMLDivElement>;\r\n}\r\n\r\nexport const DesktopContext = createContext({\r\n  desktopRef: {},\r\n});\r\n\r\nconst Desktop = () => {\r\n  const desktopRef = useRef(null);\r\n\r\n  return (\r\n    <DesktopContext.Provider value={{ desktopRef }}>\r\n      <Wrapper ref={desktopRef}>\r\n        <Controls />\r\n        <MainBlock />\r\n      </Wrapper>\r\n    </DesktopContext.Provider>\r\n  );\r\n};\r\n\r\nexport default Desktop;\r\n\r\nconst Wrapper = styled.div`\r\n  position: relative;\r\n  padding: 10px;\r\n  padding-bottom: 1000px;\r\n  max-height: 100%;\r\n  flex-grow: 1;\r\n  overflow: auto;\r\n`;\r\n","import Desktop from './Desktop';\r\n\r\nexport default Desktop;\r\n\r\nexport * from './Desktop';\r\n","import React, { FC } from 'react';\r\nimport styled from 'styled-components';\r\n\r\nconst SettingsBar: FC = () => {\r\n  return (\r\n    <Wrapper>\r\n\r\n    </Wrapper>\r\n  );\r\n};\r\n\r\nexport default SettingsBar;\r\n\r\nconst Wrapper = styled.div`\r\n  height: 80px;\r\n  background: #000000;\r\n`;\r\n","import SettingsBar from './SettingsBar';\r\n\r\nexport default SettingsBar;\r\n","import React, { FC } from 'react';\r\nimport styled from 'styled-components';\r\n\r\nimport LeftBar from '../main-containers/LeftBar';\r\nimport RightBar from '../main-containers/RightBar';\r\nimport Desktop from '../main-containers/Desktop';\r\nimport SettingsBar from '../main-containers/SettingsBar';\r\n\r\nconst Layout: FC = () => {\r\n  return (\r\n    <Wrapper>\r\n      <SettingsBar />\r\n      <Row>\r\n        <LeftBar />\r\n        <Desktop />\r\n        <RightBar />\r\n      </Row>\r\n    </Wrapper>\r\n  );\r\n};\r\n\r\nexport default Layout;\r\n\r\nconst Wrapper = styled.div`\r\n  width: 100%;\r\n  height: calc(100vh - 75px);\r\n  overflow: hidden;\r\n`;\r\n\r\nconst Row = styled.div`\r\n  width: 100%;\r\n  height: calc(100% - 80px);\r\n  display: flex;\r\n`;\r\n","import AppContainer from './AppContainer';\r\n\r\nexport default AppContainer;\r\n","import React, { FC } from 'react';\r\nimport Header from '../Header/Header';\r\nimport Layout from '../Layout/Layout';\r\n\r\nconst AppContainer: FC = () => {\r\n  return (\r\n    <>\r\n      <Header />\r\n      <Layout />\r\n    </>\r\n  );\r\n};\r\n\r\nexport default AppContainer;\r\n","import { createGlobalStyle } from 'styled-components';\r\n\r\nimport TradeWindsRegularEot from './TradeWinds.eot';\r\nimport TradeWindsRegularWoff from './TradeWinds.woff';\r\nimport TradeWindsRegularWoff2 from './TradeWinds.woff2';\r\nimport TradeWindsRegularTtf from './TradeWinds.woff2';\r\n\r\nimport RobotoBoldEot from './Roboto-Bold.eot';\r\nimport RobotoBoldTtf from './Roboto-Bold.ttf';\r\nimport RobotoBoldWoff from './Roboto-Bold.woff';\r\nimport RobotoBoldWoff2 from './Roboto-Bold.woff2';\r\n\r\nimport RobotoRegularEot from './Roboto-Regular.eot';\r\nimport RobotoRegularTtf from './Roboto-Regular.ttf';\r\nimport RobotoRegularWoff from './Roboto-Regular.woff';\r\nimport RobotoRegularWoff2 from './Roboto-Regular.woff2';\r\n\r\nimport RobotoItalicEot from './Roboto-Italic.eot';\r\nimport RobotoItalicTtf from './Roboto-Italic.ttf';\r\nimport RobotoItalicWoff from './Roboto-Italic.woff';\r\nimport RobotoItalicWoff2 from './Roboto-Italic.woff2';\r\n\r\nexport default createGlobalStyle`\r\n  @font-face {\r\n    font-family: TradeWinds;\r\n    src: url(${TradeWindsRegularEot});\r\n    src: url('${TradeWindsRegularEot}?#iefix') format('embedded-opentype'),\r\n      url(${TradeWindsRegularWoff2}) format('woff2'),\r\n      url(${TradeWindsRegularWoff}) format('woff'),\r\n      url(${TradeWindsRegularTtf}) format('truetype');\r\n    font-weight: normal;\r\n    font-style: normal;\r\n  }\r\n  \r\n  @font-face {\r\n    font-family: Roboto;\r\n    src: url(${RobotoBoldEot});\r\n    src: url('${RobotoBoldEot}?#iefix') format('embedded-opentype'),\r\n      url(${RobotoBoldWoff2}) format('woff2'),\r\n      url(${RobotoBoldWoff}) format('woff'),\r\n      url(${RobotoBoldTtf}) format('truetype');\r\n    font-weight: bold;\r\n    font-style: normal;\r\n  }\r\n  \r\n  @font-face {\r\n    font-family: Roboto;\r\n    src: url(${RobotoRegularEot});\r\n    src: url('${RobotoRegularEot}?#iefix') format('embedded-opentype'),\r\n      url(${RobotoRegularWoff2}) format('woff2'),\r\n      url(${RobotoRegularWoff}) format('woff'),\r\n      url(${RobotoRegularTtf}) format('truetype');\r\n    font-weight: normal;\r\n    font-style: normal;\r\n  }\r\n  \r\n  @font-face {\r\n    font-family: Roboto;\r\n    src: url(${RobotoItalicEot});\r\n    src: url('${RobotoItalicEot}?#iefix') format('embedded-opentype'),\r\n      url(${RobotoItalicWoff2}) format('woff2'),\r\n      url(${RobotoItalicWoff}) format('woff'),\r\n      url(${RobotoItalicTtf}) format('truetype');\r\n    font-weight: normal;\r\n    font-style: italic;\r\n  }\r\n`;\r\n","import React, { FC } from 'react';\r\nimport { Normalize } from 'styled-normalize';\r\nimport { createGlobalStyle } from 'styled-components';\r\nimport Fonts from '../fonts';\r\n\r\nconst CommonStyles = createGlobalStyle`\r\n  *, *::before, *::after {\r\n    box-sizing: border-box;\r\n    padding: 0;\r\n    margin: 0;\r\n  }\r\n  \r\n  ul, ol {\r\n    list-style: none;\r\n  }\r\n\r\n  body {\r\n    font-size: 14px;\r\n    font-family: Roboto, sans-serif;\r\n    color: #ffffff;\r\n  }\r\n`;\r\n\r\nconst GlobalStyles: FC = () => (\r\n  <>\r\n    <Normalize />\r\n    <Fonts />\r\n    <CommonStyles />\r\n  </>\r\n);\r\n\r\nexport default GlobalStyles;\r\n","import GlobalStyles from './GlobalStyles';\r\n\r\nexport default GlobalStyles;\r\n","import { combineReducers } from 'redux';\r\n\r\nimport { layersReducer as layers } from './layers/layers.reducer';\r\n\r\nexport const rootReducer = combineReducers({\r\n  layers,\r\n});\r\n\r\nexport type RootState = ReturnType<typeof rootReducer>;\r\n","import React, { FC } from 'react';\nimport { Provider } from 'react-redux';\nimport { BrowserRouter as Router } from 'react-router-dom';\nimport { createStore, applyMiddleware, compose } from 'redux';\nimport createSagaMiddleware from 'redux-saga';\n\nimport AppContainer from './components/AppContainer';\nimport GlobalStyles from './styles';\nimport { rootReducer } from './store/root.reducer';\n\ndeclare global {\n  interface Window {\n    __REDUX_DEVTOOLS_EXTENSION_COMPOSE__?: typeof compose;\n  }\n}\n\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\n\nconst sagaMiddleware = createSagaMiddleware();\n\nconst store = createStore(rootReducer, composeEnhancers(applyMiddleware(sagaMiddleware)));\n\nconst App: FC = () => {\n  return (\n    <Provider store={store}>\n      <Router>\n        <GlobalStyles />\n        <AppContainer />\n      </Router>\n    </Provider>\n  );\n};\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}